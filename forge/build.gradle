buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // Make sure this version matches the one included in Kotlin for Forge
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        // OPTIONAL Gradle plugin for Kotlin Serialization
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.6.10'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "com.matthewprenger.cursegradle"
    id "com.modrinth.minotaur"
}

apply from: '../gradle-scripts/publish-curseforge.gradle'

architectury {
    platformSetupLoomIde()
    forge()
}

repositories {
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }

    // jitpack for univec
    maven { url 'https://jitpack.io' }

    // libs folder for ntm
    // please make a repo soon!!!!
    flatDir {
        dirs 'libs'
    }

    mavenCentral()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
            runtimeClasspath.extendsFrom common
            developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    modApi("org.valkyrienskies:valkyrienskies-118-forge:${rootProject.vs2_version}") { transitive = false }
    implementation("org.valkyrienskies.core:api:1.1.0+c92814e9b7") { transitive = false }

    common(project(path: ":common", configuration: "namedElements")) { transitive = false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    // fasterxml.jackson   dont know why it isnt already in
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'

    // joml stuff          same
    implementation 'org.joml:joml:1.10.5'
    implementation 'org.joml:joml-primitives:1.10.0'

    // jsonschema
    implementation 'com.github.imifou:jsonschema-module-addon:1.2.1'

    // Add Kotlin for Forge.
    // forgeRuntimeLibrary('curse.maven:kotlinforforge-351264:4392674')
    implementation 'thedarkcolour:kotlinforforge:3.10.0'

    // UniVec
    implementation 'com.github.SuperCraftAlex:LIBRARY-UnifiedVectors:cac439d176'

    modApi("at.martinthedragon:nucleartech:1.18.2-0.0.19.2:snapshot20230222T180857")
    implementation("at.martinthedragon:nucleartech:1.18.2-0.0.19.2:snapshot20230222T180857-api")
    sourceArtifacts("at.martinthedragon:nucleartech:1.18.2-0.0.19.2:snapshot20230222T180857-sources")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version, "vs2_version": project.vs2_version.substring(0, project.vs2_version.indexOf('+'))
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

compileKotlin {
    kotlinOptions { jvmTarget = "17" }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
            dependsOn shadowJar
            classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
            from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}